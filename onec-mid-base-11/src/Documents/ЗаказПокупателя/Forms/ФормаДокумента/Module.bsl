
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//{{Колесников Р.В. 12.12.2023: Добавление команды и кнопки на форму о перерасчёте строк таблицы с указанной скидкой
	ДОП_РаботаСФормами.ДобавитьКомандуРассчитатьНаФорму(ЭтотОбъект);
	//}}   
КонецПроцедуры

&НаКлиенте
Процедура КомандаРассчитатьСтроки(Команда)
//{{Колесников Р.В. 12.12.2023: Процедура при нажатии на кпоку "Рассчитать" на форме документа 	
	ПерерасчетДанныхТаблицДокумента();
//}}	
КонецПроцедуры



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
		
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Асинх Процедура  ВопросПользователю()
//{{Колесников Р.В. 12.12.2023
//Асинхронная процедура с вопросом пользователю о возможности пересчёта сумм в строках таблиц с товарами и услугами
	Ответ = Ждать ВопросАсинх("Пересчитать данные таблиц?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПерерасчетДанныхТаблицДокумента();
	КонецЕсли;

//}}	
КонецПроцедуры

&НаКлиенте
Процедура ПерерасчетДанныхТаблицДокумента()
//{{Колесников Р.В. 12.12.2023
//Процедура перерасчёта строк заказа покупателя с учётом введённой скидки в поле Согласованная скидка	
		Для Каждого Строка Из Объект.Товары Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла;
		Для Каждого Строка Из Объект.Услуги Цикл
			РассчитатьСуммуСтроки(Строка);
		КонецЦикла;  
	
//}}	
КонецПроцедуры



&НаКлиенте
Процедура СогласованнаяСкидкаПриИзмененииДанных() 
//НачалоДоработки
//Добавление обработчика при изменении СогласованнойСкидки
//Колесников Р.В. 12.12.2023 
		ВопросПользователю();		
 //КонецДоработки	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	//НачалоДоработки
	//Колесников Р.В. 12.12.2023 
	//Исходный код
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	//
	//Новый код
	Скидка = ТекущиеДанные.Скидка + Объект.ДОП_СогласованнаяСкидка;
	Если Скидка > 100 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Скидка не может превышать 100%!";
		ИмяТЧ = ДОП_ОбщийМодуль.ПолучитьИмяТабличнойЧастиПоСсылкеНаНоменклатуру(ТекущиеДанные.Номенклатура);
		СтрокаДляВыводаСообщения = ТекущиеДанные.НомерСтроки - 1;
		Сообщение.Поле = СтрШаблон("Объект.%1[%2].Скидка", ИмяТЧ, СтрокаДляВыводаСообщения);
    	Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		ТекущиеДанные.Сумма = 0;
		РассчитатьСуммуДокумента();
		Возврат;
	Иначе
		КоэффициентСкидки = 1 - Скидка / 100;
	КонецЕсли;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	РассчитатьСуммуДокумента();
	//КонецДоработки
	
		
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

